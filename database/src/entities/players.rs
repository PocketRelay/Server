//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "players")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    pub email: String,
    pub display_name: String,
    pub session_token: Option<String>,
    pub origin: bool,
    pub password: String,
    pub credits: u32,
    pub credits_spent: u32,
    pub games_played: u32,
    pub seconds_played: u32,
    pub inventory: String,
    pub csreward: u16,
    pub face_codes: Option<String>,
    pub new_item: Option<String>,
    pub completion: Option<String>,
    pub progress: Option<String>,
    pub cs_completion: Option<String>,
    pub cs_timestamps1: Option<String>,
    pub cs_timestamps2: Option<String>,
    pub cs_timestamps3: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::player_classes::Entity")]
    Classes,
    #[sea_orm(has_many = "super::player_characters::Entity")]
    Characters,
    #[sea_orm(has_one = "super::galaxy_at_war::Entity")]
    GalaxyAtWar,
}

impl Related<super::player_classes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Classes.def()
    }
}

impl Related<super::player_characters::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Characters.def()
    }
}

impl Related<super::galaxy_at_war::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GalaxyAtWar.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
