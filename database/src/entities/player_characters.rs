//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "player_characters")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    pub player_id: u32,
    pub index: u16,
    pub kit_name: String,
    pub name: String,
    pub tint1: u16,
    pub tint2: u16,
    pub pattern: u16,
    pub pattern_color: u16,
    pub phong: u16,
    pub emissive: u16,
    pub skin_tone: u16,
    pub seconds_played: u32,
    pub timestamp_year: u32,
    pub timestamp_month: u32,
    pub timestamp_day: u32,
    pub timestamp_seconds: u32,
    pub powers: String,
    pub hotkeys: String,
    pub weapons: String,
    pub weapon_mods: String,
    pub deployed: bool,
    pub leveled_up: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "Entity",
        from = "Column::Id",
        to = "Column::PlayerId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    SelfRef,
    #[sea_orm(
        belongs_to = "super::players::Entity",
        from = "Column::PlayerId",
        to = "super::players::Column::Id"
    )]
    Player,
}

impl Related<super::players::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Player.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
